Circuit Base Design pattern
Hystrix Dashboard

O-Sql
Deep learning

api gateway for rest and soap -  apigee

to debug - ELK stack

Scalling Challenges:
=====================
Data synchronization
security
versioning
discovery
data staleness
debugging and logging
testing
Monitoring
DevOps support
Fault tolerance


Saga Deseign pattern


Cloud services:
=================
Spring cloud --

Netflix Eureka naming server - it's a service registry where your services to be registered

Application			Port
-----------			-----
Limits services			8080,8081,..
spring cloud config server	8888,..
currency exchange services	8000,8001,8002,..







Why Eureka server:
====================
Service registration.
It can by created by spring boot(pom.xml)
Multiple instance we can run.

Consule[Alternative for Eureka]:
================================
It can by created by third party. check below.We need to start "consul" server in command prompt
application.properties
=======================
spring.application.name=Citi-Eureka-Server
server.port=8761
eureka.client.serviceUrl.defaultZone:http=//localhost:8761/eureka/
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false



-Dserver.port=6061 -Dspring.application.name=KYC_app1

https://github.com/eswaribala/virtusa_microservices_2018

app2 - 2595c3c6-848b-43ac-865e-bc52d790466d
app3 - 7478ee62-e9d2-480b-8450-5e09c9758f66

for Consul portal:
==================
C:\Users\jagannadhamk\Downloads\consul_1.4.0_windows_amd64>consul agent -server -bootstrap-expect=1 -data-dir=consul-data -ui -bind=172.20.44.208

To check consul portal up:
--------------------------
http://localhost:8500/ui/dc1/services

Only one instance we can run in one single machine because it will run by based on ip address.


application.properties:
=========================
spring.application.name=KYCService
server.port=6064
eureka.client.service-url.default-zone=http://localhost:8761/eureka
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
security.basic.enabled=true
spring.security.user.name=user1
spring.security.user.password=user1@123
management.security.enabled=false
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
DATABASE_HOST=localhost:3306
DATABASE_NAME=virtusadb
spring.datasource.url=jdbc:mysql://${DATABASE_HOST}/${DATABASE_NAME}?useSSL=true
spring.datasource.username=root
spring.datasource.password=Login@123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# JPA (JpaBaseConfiguration




Hystrix circuit breaker pattern:
================================
It's a fall back handler.
It has dashbaord
We can see howmany services down/up in hystrix dashboard.
https://localhost:8080/hystrix
It can by created by spring boot(pom.xml)


In histrix dashboard - http://localhost:9091/actuator/hystrix.stream

eureka  - http://localhost:8761/
consule - http://localhost:8500/ui/
hystrix - http://localhost:<port>/hystrix

cloud foundry pws:
=================
Register with cloud foundry pws(pivotal web services) 30 days trail version
Download - cloud foundry windows installer(cf-cli-installer-6.4 zip)
download - DockerToolbox.exe

--------------------------------------
C:\Users\jagannadhamk>cf login -a api.run.pivotal.io
API endpoint: api.run.pivotal.io

Email> jagangp14@gmail.com

Password>
Authenticating...
OK

Targeted org virtusa.org

Targeted space development



API endpoint:   https://api.run.pivotal.io (API version: 2.126.0)
User:           jagannadhamk@virtusa.com
Org:            virtusa.org
Space:          development





Rightclick on project > run as> maveninstaller = then it will build the application and generete jar
C:\Users\jagannadhamk\.m2\repository\com\virtusa\banking\app\KYC_APP\0.0.1-SNAPSHOT\KYC_APP-0.0.1-SNAPSHOT.jar


cf push kycapp_cf -p C:\Users\jagannadhamk\.m2\repository\com\virtusa\banking\app\KYC_APP\0.0.1-SNAPSHOT\KYC_APP-0.0.1-SNAPSHOT.jar

To check logs -- cf logs kycapp_cf --recent



got ot your cloud foundry create databasae
push your jar to cf
If you get failed in console then go to 
Bind your service(mysql) to your application


Ribbon Load Balancer:
===================
It is used for Load balancer

Case A: Identified by the discoveryclient
--------------------------
No need annotation @Feign, @Ribbon
SERVICE ID
	Instances

It is recommended in prod env
It is automatically collect the urls from yureka,consule,.. servers

Case B:   
-----------------------------
need annotation @Feign, @Ribbon
It is not recommended in prod env
In properties file we should have url which are all required.
It will look into application.properties file which we configured urls in eureka key value.



ZUUL:
=====
It is used to do routing.
eureka is mandatory for zuul by default.

4a3065d3-5726-44e1-8406-8cfe83277eb3


http://localhost:8765/api/demo/
It will redirect to 
http://localhost:6060/getCustomers


Docker:
=======
